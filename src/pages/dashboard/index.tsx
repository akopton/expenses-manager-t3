import { useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { CustomList } from "~/components/CustomList/CustomList";
import { GridList } from "~/components/GridList/GridList";
import { Title } from "~/components/Title/Title";
import { BillWithProducts } from "~/types/types";
import { api } from "~/utils/api";
import { Carousel } from "~/components/Carousel/Carousel";
import { getUserFirstName } from "~/utils/getUserFirstName";
import { CustomLink } from "~/components/CustomLink/CustomLink";
import { sumPlnValues } from "~/utils/sumValues";
import { useState } from "react";

export default function Dashboard() {
  const session = useSession();
  const userFirstName =
    session.data?.user.name && getUserFirstName(session.data?.user.name);

  const lastUpdatedSets = api.billSets.getLastUpdated.useQuery();
  const topUsedCategories = api.categories.getTopUsed.useQuery();
  const [input, setInput] = useState(30);
  const sumValue = api.bills.getValueFromXDays.useQuery(input);

  return (
    <>
      <Head>
        <title>Tablica</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col items-center gap-10 overflow-auto px-4 py-20">
        <h1 className="w-full text-center text-2xl">Cześć {userFirstName}!</h1>

        <div className="flex flex-col items-center gap-3 rounded-2xl border-4 border-primaryColor p-3 text-center">
          <div>
            <h2 className="text-lg">Wydatki z ostatnich {input} dni</h2>
            <span className="border-b-2 border-primaryColor px-2 text-xl">
              {sumValue.data && sumValue.data.toFixed(2).replace(".", ",")} zł
            </span>
          </div>
          <div className="flex flex-col gap-2">
            <span>Najczęściej wybierane kategorie</span>
            <ul className="grid w-full grid-cols-2 gap-3">
              {topUsedCategories.data &&
                topUsedCategories.data.map((category) => {
                  return (
                    <li key={category.id}>
                      <Link
                        href={`/categories/${category.name}`}
                        className="flex w-full items-center justify-center overflow-hidden text-ellipsis whitespace-nowrap rounded-lg bg-primaryColor p-2 text-primaryFont"
                      >
                        {category.name}
                      </Link>
                    </li>
                  );
                })}
            </ul>
          </div>
        </div>
        <CustomLink href="/dashboard/add-bill" text="Nowy rachunek" />

        <div className="flex w-full flex-col items-center">
          <h2 className="w-full text-center text-xl">
            Ostatnio zaktualizowane zestawy
          </h2>
          {lastUpdatedSets.data && (
            <Carousel
              data={lastUpdatedSets.data}
              centerBtn={
                <CustomLink
                  href={{ pathname: "/bills/sets/", query: { id: "add-set" } }}
                  text="Nowy zestaw"
                />
              }
            />
          )}
        </div>
      </main>
    </>
  );
}

// return (
//   <>
//     <Head>
//       <title>Tablica</title>
//       <meta name="description" content="Generated by create-t3-app" />
//       <link rel="icon" href="/favicon.ico" />
//     </Head>
//     <main className="relative grid w-screen grid-cols-1 overflow-y-auto overflow-x-hidden py-20 sm:h-screen  xl:grid-cols-4 xl:overflow-hidden">
//       <div className="flex flex-col items-center text-xl sm:gap-10 lg:col-span-2">
//         {/* <h2 className="sm:text-5xl">Cześć {sesh.data?.user.name}!</h2> */}
//         <div className="flex w-full flex-col justify-center sm:flex-row">
//           <div className="w-full px-5">
//             <Title text="Nadchodzące wydatki" />
//             {billsToPay.data && (
//               <CustomList<BillWithProducts>
//                 data={billsToPay.data}
//                 itemsPerPage={4}
//                 listType="to-pay"
//               />
//             )}
//           </div>
//           <div className="w-full px-5">
//             <Title text="Ostatnio dodane" />
//             {billsByDate.data && (
//               <CustomList<BillWithProducts>
//                 data={billsByDate.data}
//                 itemsPerPage={4}
//                 listType="last-added"
//               />
//             )}
//           </div>
//         </div>
//         <div className="flex h-full w-full flex-col gap-4 text-center">
//           <span className="w-full text-center text-2xl">
//             Te zestawy zostały ostatnio zaktualizowane
//           </span>
//           <div className="w-full">
//             {lastUpdatedSets.data && <Carousel data={lastUpdatedSets.data} />}
//           </div>
//         </div>
//       </div>
//       <div className="span m-4 flex flex-col items-center justify-center gap-5 md:m-10 md:gap-10 md:px-5 lg:col-span-2 xl:m-0">
//         {links.map((link) => {
//           return (
//             <Link
//               href={link.href}
//               key={link.id}
//               className="rounded-xl bg-primaryColor px-3 py-2 text-center text-xl text-white hover:animate-myAnimation lg:px-4 lg:py-3 lg:text-2xl xl:px-6 xl:py-4 xl:text-3xl"
//             >
//               {link.name}
//             </Link>
//           );
//         })}
//       </div>
//     </main>
//   </>
// );
