import { useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { CustomList } from "~/components/CustomList/CustomList";
import { GridList } from "~/components/GridList/GridList";
import { Title } from "~/components/Title/Title";
import { BillWithProducts } from "~/types/types";
import { api } from "~/utils/api";
import { BillSet } from "@prisma/client";

export default function Dashboard() {
  const billsByDate = api.bills.getBillsByAddedDate.useQuery(1);
  const billsToPay = api.bills.getNotPaidBills.useQuery(1);
  const lastUpdatedSets = api.billSets.getLastUpdated.useQuery();
  const sesh = useSession();

  const links = [
    { id: 1, name: "Nowy rachunek", href: "/dashboard/add-bill" },
    {
      id: 2,
      name: "Nowy zestaw",
      href: { pathname: "/bills/sets", query: { id: "add-set" } },
    },
    { id: 3, name: "Najpopularniejsze kategorie", href: "/dashboard" },
    { id: 4, name: "Najpopularniejsze zestawy", href: "/dashboard" },
  ];

  return (
    <>
      <Head>
        <title>Tablica</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative grid w-screen grid-cols-1 overflow-y-auto overflow-x-hidden py-20 sm:h-screen sm:grid-cols-4 sm:overflow-hidden">
        <div className="flex flex-col items-center text-xl sm:col-span-2 sm:gap-10">
          <h2 className="sm:text-5xl">Cześć {sesh.data?.user.name}!</h2>
          <div className="flex w-full flex-col justify-center sm:flex-row">
            <div className="w-full px-5">
              <Title text="Nadchodzące wydatki" />
              {billsToPay.data && (
                <CustomList<BillWithProducts>
                  data={billsToPay.data}
                  itemsPerPage={4}
                  listType="to-pay"
                />
              )}
            </div>
            <div className="w-full px-5">
              <Title text="Ostatnio dodane" />
              {billsByDate.data && (
                <CustomList<BillWithProducts>
                  data={billsByDate.data}
                  itemsPerPage={4}
                  listType="last-added"
                />
              )}
            </div>
          </div>
          <div className="flex h-full w-full flex-col gap-4 text-center">
            <span className="w-full text-center text-2xl">
              Te zestawy zostały ostatnio zaktualizowane
            </span>
            <div className="flex w-full">
              {lastUpdatedSets.data && (
                <GridList<BillSet>
                  data={lastUpdatedSets.data}
                  rows={1}
                  cols={2}
                  itemType={"BillSet"}
                  route={"/bills/sets"}
                />
              )}
            </div>
          </div>
        </div>
        <div className="span flex flex-col items-center justify-center gap-5 sm:col-span-2 sm:gap-20 sm:px-10">
          {links.map((link) => {
            return (
              <Link
                href={link.href}
                key={link.id}
                className="rounded-xl bg-primaryColor px-3 py-2 text-xl text-white hover:animate-myAnimation sm:px-6 sm:py-4 sm:text-4xl"
              >
                {link.name}
              </Link>
            );
          })}
        </div>
      </main>
    </>
  );
}
